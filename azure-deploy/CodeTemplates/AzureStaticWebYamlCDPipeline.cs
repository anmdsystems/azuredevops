// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ngCodeGen.CodeTemplates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    using System.IO;
    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class AzureStaticWebYamlCDPipeline : AzureStaticWebYamlCDPipelineBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\n");
            
            #line 14 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"

Deployment data = JsonConvert.DeserializeObject<Deployment>(this.deployment);

var stages = data.WebDeploymentStages;
var defaultLocation = data.DefaultLocation;
var poolName = data.PoolName;
var vmImage = string.IsNullOrEmpty(data.VmImage) ? "" : $"vmimage: {data.VmImage}";
var teamName = data.TeamName;
var appName = data.Name;

// DO NOT WIPE THE SOURCE CODE...
var codeGenPath = $"{this.rootTemplatePath}codegen\\";

// TEMPLATE CODE HERE

            
            #line default
            #line hidden
            this.Write("name: $(BuildID)\r\n\r\npool: \r\n  name: ");
            
            #line 32 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(poolName));
            
            #line default
            #line hidden
            this.Write("\r\n  ");
            
            #line 33 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(vmImage));
            
            #line default
            #line hidden
            this.Write("\r\n\r\ntrigger:\r\n- develop\r\n- releases/*\r\n- master\r\n\r\nstages:\r\n");
            
            #line 41 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"

// provision deployment stages   
for (Int32 i = 0; i < stages.Length; ++i) {
	var stage = stages[i];
    
    var subscriptionId = stage.SubscriptionId;
    var deploymentLocation = stage.DeploymentLocation;
    var deploymentLocationName = stage.DeploymentLocationName;
    var location = stage.DeploymentLocationShort;
    var azureServiceConnectionName = stage.AzureServiceConnectionName;
    var resourceGroup = stage.ResourceGroup;
    var environment = stage.Environment;
    var customCondition = "eq(variables['Build.SourceBranch'], '')";
    var storageAccountName = $"{teamName}{environment}{location}{appName}sa";
    var storageAccountNameBlue = $"{teamName}{environment}{location}{appName}bluesa";
    var cdnProfileName = $"{teamName}-{environment}-{appName}-cdn";
    var cdnProfileNameBlue = $"{teamName}-{environment}-{appName}-blue-cdn";
    var endPointName = $"{cdnProfileName}/{cdnProfileName}";
    var endPointNameBlue = $"{cdnProfileNameBlue}/{cdnProfileNameBlue}";
    var domain = stage.AppServiceCustomHostname;
    var domainBlue = stage.AppServiceBlueSlotCustomHostname;
    var buildSourceBranch = stage.BuildSourceBranch;
    var certKeyVaultRG = stage.CertKeyVaultRG;
    var certKeyVaultName = stage.CertKeyVaultName;
    var certKeySecretName = stage.CertKeyVaultSecret;
    var certKeySecretVersion = stage.CertKeyVaultVersion;

    if (environment.ToLower() == "int") {
        customCondition = "eq(variables['Build.SourceBranch'], 'refs/heads/develop')";
    
            
            #line default
            #line hidden
            this.Write("  - stage: VALIDATE\r\n    jobs:\r\n    - deployment: Validation\r\n      displayName: " +
                    "Validate Template\r\n      environment: ");
            
            #line 74 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(environment.ToLower()));
            
            #line default
            #line hidden
            this.Write(@"     
    - job: VALIDATE
      condition: and(succeeded(), and(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Deploy'], 'true')))
      steps:
      - task: AzureResourceGroupDeployment@2
        displayName: 'Validate Template'
        inputs:
          azureSubscription: '");
            
            #line 81 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          resourceGroupName: \'");
            
            #line 82 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write("\'\r\n          location: \'");
            
            #line 83 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(deploymentLocationName));
            
            #line default
            #line hidden
            this.Write(@"'
          csmFile: 'ArmTemplate/azuredeploy.storageaccount.json'
          csmParametersFile: 'ArmTemplate/azuredeploy.storageaccount.parameters.json'
          overrideParameters: '-Environment int -DeploymentLocation use'
          deploymentMode: Validation    

      - task: AzureResourceGroupDeployment@2
        displayName: 'Validate Template'
        inputs:
          azureSubscription: '");
            
            #line 92 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          resourceGroupName: \'");
            
            #line 93 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write("\'\r\n          location: \'");
            
            #line 94 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(deploymentLocationName));
            
            #line default
            #line hidden
            this.Write(@"'
          csmFile: ArmTemplate/azuredeploy.cdnProfile.json
          csmParametersFile: ArmTemplate/azuredeploy.cdnProfile.parameters.json
          overrideParameters: '-Environment int -OriginHostHeader store.z13.web.core.windows.net'
          deploymentMode: Validation
");
            
            #line 99 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
}
    else if (environment.ToLower() == "qa" || environment.ToLower() == "test") {
        customCondition = "startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/')";
    }
    else if (environment.ToLower() == "can") {
        customCondition = "or(startsWith(variables['Build.SourceBranch'], 'refs/heads/releases/'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))";
    }
    else if (environment.ToLower() == "prod") {
        customCondition = "eq(variables['Build.SourceBranch'], 'refs/heads/master')";
    } else {
        customCondition = $"eq(variables['Build.SourceBranch'], {buildSourceBranch})";
    }
    
            
            #line default
            #line hidden
            
            #line 112 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
 if (this.hasSlots) {
            
            #line default
            #line hidden
            this.Write("  - stage: ");
            
            #line 112 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stage.Name.ToUpper().Replace("-","_").Replace(".","_")));
            
            #line default
            #line hidden
            this.Write("_BLUE\r\n    condition: ");
            
            #line 113 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(customCondition));
            
            #line default
            #line hidden
            this.Write("\r\n    jobs:\r\n    - deployment: ");
            
            #line 115 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(environment));
            
            #line default
            #line hidden
            this.Write("DeploymentBlue \r\n      displayName: Deploy Template To ");
            
            #line 116 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(environment.ToLower()));
            
            #line default
            #line hidden
            this.Write(" \r\n      environment: ");
            
            #line 117 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(environment.ToLower()));
            
            #line default
            #line hidden
            this.Write("  \r\n    - job: deployCdnWithStorageAccountBlue\r\n      variables:\r\n        originH" +
                    "ostHeaderBlue: \"\"\r\n      condition: and(succeeded(), ");
            
            #line 121 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(customCondition));
            
            #line default
            #line hidden
            this.Write(")\r\n      steps:\r\n      - task: AzureResourceManagerTemplateDeployment@3\r\n        " +
                    "displayName: \'ARM Template deployment: Resource Group scope\'\r\n        inputs:\r\n " +
                    "         azureResourceManagerConnection: \'");
            
            #line 126 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          subscriptionId: \'");
            
            #line 127 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write("\'\r\n          resourceGroupName: \'");
            
            #line 128 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write("\'\r\n          location: \'");
            
            #line 129 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(deploymentLocationName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          templateLocation: \'Linked artifact\'\r\n          csmFile: \'ArmTemplate" +
                    "/azuredeploy.storageaccountblue.json\'\r\n          csmParametersFile: \'ArmTemplate" +
                    "/azuredeploy.storageaccount.parameters.");
            
            #line 132 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stage.Name));
            
            #line default
            #line hidden
            this.Write(".json\'\r\n          deploymentMode: Incremental    \r\n      \r\n      - task: AzureCLI" +
                    "@2\r\n        displayName: \'Azure CLI \'\r\n        inputs:\r\n          azureSubscript" +
                    "ion: \'");
            
            #line 138 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          scriptType: ps\r\n          scriptLocation: inlineScript\r\n          in" +
                    "lineScript: |\r\n            az storage blob service-properties update --account-n" +
                    "ame ");
            
            #line 142 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(storageAccountNameBlue));
            
            #line default
            #line hidden
            this.Write(" --static-website --404-document 404.html --index-document index.html\r\n     \r\n   " +
                    "         $originHost = az storage account show --subscription ");
            
            #line 144 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write(" -n ");
            
            #line 144 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(storageAccountNameBlue));
            
            #line default
            #line hidden
            this.Write(" -g ");
            
            #line 144 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write(@" --query primaryEndpoints.web --output tsv
     
            $originHostHeaderValue = $originHost -replace ""https://"" -replace ""/""

            echo ""##vso[task.setvariable variable=originHostHeader;]$originHostHeaderValue""
          addSpnToEnvironment: true
          useGlobalConfig: true  

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'ARM Template deployment: Resource Group scope'
        inputs:
          azureResourceManagerConnection: '");
            
            #line 155 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          subscriptionId: \'");
            
            #line 156 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write("\'\r\n          resourceGroupName: \'");
            
            #line 157 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write("\'\r\n          location: \'");
            
            #line 158 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(deploymentLocationName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          templateLocation: \'Linked artifact\'\r\n          csmFile: \'ArmTemplate" +
                    "/azuredeploy.cdnProfile-blue.json\'\r\n          csmParametersFile: \'ArmTemplate/az" +
                    "uredeploy.cdnProfile.parameters.");
            
            #line 161 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stage.Name));
            
            #line default
            #line hidden
            this.Write(".json\'\r\n          overrideParameters: \'-OriginHostHeader $(originHostHeaderBlue)\'" +
                    "\r\n          deploymentMode: Incremental\r\n\r\n      - task: AzureCLI@2\r\n        dis" +
                    "playName: \'Azure CLI \'\r\n        inputs:\r\n          azureSubscription: \'");
            
            #line 168 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          scriptType: ps\r\n          scriptLocation: inlineScript\r\n          in" +
                    "lineScript: |\r\n            az cdn custom-domain enable-https -g \"");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write("\" --endpoint-name \"");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cdnProfileNameBlue));
            
            #line default
            #line hidden
            this.Write("\" --profile-name \"");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cdnProfileNameBlue));
            
            #line default
            #line hidden
            this.Write("\" -n \"");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cdnProfileNameBlue));
            
            #line default
            #line hidden
            this.Write("\" --min-tls-version 1.2 --subscription ");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write(" --user-cert-group-name ");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(certKeyVaultRG));
            
            #line default
            #line hidden
            this.Write(" --user-cert-vault-name ");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(certKeyVaultName));
            
            #line default
            #line hidden
            this.Write(" --user-cert-protocol-type sni --user-cert-secret-name ");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(certKeySecretName));
            
            #line default
            #line hidden
            this.Write(" --user-cert-secret-version ");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(certKeySecretVersion));
            
            #line default
            #line hidden
            this.Write(" --user-cert-subscription-id ");
            
            #line 172 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n          addSpnToEnvironment: true\r\n          useGlobalConfig: true\r\n");
            
            #line 176 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
}
            
            #line default
            #line hidden
            this.Write("  - stage: ");
            
            #line 176 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stage.Name.ToUpper().Replace("-","_").Replace(".","_")));
            
            #line default
            #line hidden
            this.Write("\r\n    condition: ");
            
            #line 177 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(customCondition));
            
            #line default
            #line hidden
            this.Write("\r\n    jobs:\r\n    - deployment: ");
            
            #line 179 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(environment));
            
            #line default
            #line hidden
            this.Write("deployCdnWithStorageAccount \r\n      displayName: Deploy Template To ");
            
            #line 180 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(environment.ToLower()));
            
            #line default
            #line hidden
            this.Write(" \r\n      environment: ");
            
            #line 181 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(environment.ToLower()));
            
            #line default
            #line hidden
            this.Write("  \r\n    - job: deployStorageAccount\r\n      variables:\r\n        originHostHeader: " +
                    "\"\"\r\n      condition: and(succeeded(), ");
            
            #line 185 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(customCondition));
            
            #line default
            #line hidden
            this.Write(")\r\n      steps:\r\n      - task: AzureResourceManagerTemplateDeployment@3\r\n        " +
                    "displayName: \'ARM Template deployment: Resource Group scope\'\r\n        inputs:\r\n " +
                    "         azureResourceManagerConnection: \'");
            
            #line 190 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          subscriptionId: \'");
            
            #line 191 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write("\'\r\n          resourceGroupName: \'");
            
            #line 192 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write("\'\r\n          location: \'");
            
            #line 193 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(deploymentLocationName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          templateLocation: \'Linked artifact\'\r\n          csmFile: \'ArmTemplate" +
                    "/azuredeploy.storageaccount.json\'\r\n          csmParametersFile: \'ArmTemplate/azu" +
                    "redeploy.storageaccount.parameters.");
            
            #line 196 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stage.Name));
            
            #line default
            #line hidden
            this.Write(".json\'\r\n          deploymentMode: Incremental\r\n\r\n      - task: AzureCLI@2\r\n      " +
                    "  displayName: \'Azure CLI \'\r\n        inputs:\r\n          azureSubscription: \'");
            
            #line 202 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          scriptType: ps\r\n          scriptLocation: inlineScript\r\n          in" +
                    "lineScript: |\r\n            az storage blob service-properties update --account-n" +
                    "ame ");
            
            #line 206 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(storageAccountName));
            
            #line default
            #line hidden
            this.Write(" --static-website --404-document 404.html --index-document index.html\r\n     \r\n   " +
                    "         $originHost = az storage account show --subscription ");
            
            #line 208 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write(" -n ");
            
            #line 208 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(storageAccountName));
            
            #line default
            #line hidden
            this.Write(" -g ");
            
            #line 208 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write(@" --query primaryEndpoints.web --output tsv
     
            $originHostHeaderValue = $originHost -replace ""https://"" -replace ""/""
     
            echo ""##vso[task.setvariable variable=originHostHeader;]$originHostHeaderValue""
          addSpnToEnvironment: true
          useGlobalConfig: true  
    
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'ARM Template deployment: Resource Group scope'
        inputs:
          azureResourceManagerConnection: '");
            
            #line 219 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          subscriptionId: \'");
            
            #line 220 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write("\'\r\n          resourceGroupName: \'");
            
            #line 221 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write("\'\r\n          location: \'");
            
            #line 222 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(deploymentLocationName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          templateLocation: \'Linked artifact\'\r\n          csmFile: \'ArmTemplate" +
                    "/azuredeploy.cdnProfile.json\'\r\n          csmParametersFile: \'ArmTemplate/azurede" +
                    "ploy.cdnProfile.parameters.");
            
            #line 225 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stage.Name));
            
            #line default
            #line hidden
            this.Write(".json\'\r\n          overrideParameters: \'-OriginHostHeader $(originHostHeader)\'\r\n  " +
                    "        deploymentMode: Incremental\r\n    \r\n      - task: AzureCLI@2\r\n        dis" +
                    "playName: \'Azure CLI \'\r\n        inputs:\r\n          azureSubscription: \'");
            
            #line 232 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(azureServiceConnectionName));
            
            #line default
            #line hidden
            this.Write("\'\r\n          scriptType: ps\r\n          scriptLocation: inlineScript\r\n          in" +
                    "lineScript: |\r\n            az cdn custom-domain enable-https -g \"");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourceGroup));
            
            #line default
            #line hidden
            this.Write("\" --endpoint-name \"");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cdnProfileName));
            
            #line default
            #line hidden
            this.Write("\" --profile-name \"");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cdnProfileName));
            
            #line default
            #line hidden
            this.Write("\" -n \"");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cdnProfileName));
            
            #line default
            #line hidden
            this.Write("\" --min-tls-version 1.2 --subscription ");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write(" --user-cert-group-name ");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(certKeyVaultRG));
            
            #line default
            #line hidden
            this.Write(" --user-cert-vault-name ");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(certKeyVaultName));
            
            #line default
            #line hidden
            this.Write(" --user-cert-protocol-type sni --user-cert-secret-name ");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(certKeySecretName));
            
            #line default
            #line hidden
            this.Write(" --user-cert-secret-version ");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(certKeySecretVersion));
            
            #line default
            #line hidden
            this.Write(" --user-cert-subscription-id ");
            
            #line 236 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(subscriptionId));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n          addSpnToEnvironment: true\r\n          useGlobalConfig: true  \r\n");
            
            #line 240 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"

    // END TEMPLATE CODE
}

SaveOutputToSubFolder(codeGenPath, $"{data.Id}\\{data.TeamName.ToLower()}-{data.Name.ToLower()}-infra\\CD", "azure-pipelines.yml");    

            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 248 "C:\research\azure-deploy\CodeTemplates\AzureStaticWebYamlCDPipeline.tt"

private void SaveOutputToSubFolder(string rootTemplatePath, string folderName, string outputFileName) {
  string templateDirectory = Path.GetDirectoryName(rootTemplatePath.Replace('\\', Path.DirectorySeparatorChar));
  string newDirectoryName = Path.Combine(templateDirectory,folderName.Replace('\\', Path.DirectorySeparatorChar));
  if(!Directory.Exists(newDirectoryName))
  {  
	Directory.CreateDirectory(newDirectoryName);
  }
  string outputFilePath = Path.Combine(newDirectoryName, outputFileName.Replace('\\', Path.DirectorySeparatorChar));
  File.WriteAllText(outputFilePath, this.GenerationEnvironment.ToString()); 
  this.GenerationEnvironment.Remove(0, this.GenerationEnvironment.Length);
}

private readonly string deployment;
private readonly string rootTemplatePath;
private readonly bool hasSlots;
public AzureStaticWebYamlCDPipeline(string deployment, string rootTemplatePath, bool hasSlots) {
    this.deployment = deployment;
    this.rootTemplatePath = rootTemplatePath;
    this.hasSlots = hasSlots;
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class AzureStaticWebYamlCDPipelineBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
